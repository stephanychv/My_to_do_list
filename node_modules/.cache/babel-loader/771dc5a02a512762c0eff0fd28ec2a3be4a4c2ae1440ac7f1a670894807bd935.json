{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Desktop\\\\listado-main\\\\listado-main\\\\src\\\\components\\\\ToDoForm.component.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Garbage from '../assets/icons/Garbage.icon';\nimport \"../styles/components/ToDoForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = () => {\n  _s();\n  const formRef = React.useRef(null);\n  const [tasks, setTasks] = React.useState(localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : []);\n  function formHandler(e) {\n    e.preventDefault();\n    const task = {\n      text: formRef.current.task.value,\n      id: Math.random()\n    };\n    setTasks([...tasks, task]);\n    formRef.current.task.value = \"\";\n  }\n  ;\n  function onDelete(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  React.useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"toDoForm\",\n    onSubmit: formHandler,\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        name: \"task\",\n        placeholder: \"Agregar Tarea ....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(task.id),\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Garbage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoForm, \"fHIX8P9JqfZLMUT2+Wg2zbKvxss=\");\n_c = ToDoForm;\nexport default ToDoForm;\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["React","Garbage","jsxDEV","_jsxDEV","ToDoForm","_s","formRef","useRef","tasks","setTasks","useState","localStorage","getItem","JSON","parse","formHandler","e","preventDefault","task","text","current","value","id","Math","random","onDelete","filter","useEffect","setItem","stringify","className","onSubmit","ref","children","type","required","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/steph/Desktop/listado-main/listado-main/src/components/ToDoForm.component.jsx"],"sourcesContent":["import React from 'react';\nimport Garbage from '../assets/icons/Garbage.icon';\nimport \"../styles/components/ToDoForm.css\";\n\n\nconst ToDoForm = () => {\n    const formRef = React.useRef(null);\n    const [tasks,setTasks] = React.useState(\n       localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\"))  :  []\n    );\n    \n    function formHandler (e){\n        e.preventDefault();\n        const task = {\n            text: formRef.current.task.value,\n            id : Math.random()\n        }\n        setTasks(\n            [...tasks,task]\n        );\n        formRef.current.task.value = \"\";\n    };\n    function onDelete(id){\n        setTasks(\n            tasks.filter((task)=>task.id !== id)\n        )\n    }\n\n    React.useEffect(()=>{\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks))\n    },[tasks])\n\n    return ( \n        <form className='toDoForm' onSubmit={formHandler} ref={formRef}>\n            <div>\n                <input type='text' required  name='task' placeholder='Agregar Tarea ....'  />\n                <button type='submit'>Agregar</button>\n            </div>\n\n            <section>\n                {\n                    tasks.map((task,i)=>(\n                        <div key={i}>\n                            <span>\n                                {task.text}\n                            </span>\n                            <button onClick={()=>onDelete(task.id)} type='button'>\n                                <Garbage/>\n                            </button>\n                        </div>\n                    ))\n                }\n            </section>\n        </form>\n    );\n}\n \nexport default ToDoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}